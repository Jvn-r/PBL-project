#include <stdio.h>
#include <stdlib.h>

#define MAX 5

char queue[MAX];
int front = -1, rear = -1;

void insert(char elem) {
    if ((rear + 1) % MAX == front) {
        printf("Queue Overflow\n");
    } else {
        if (front == -1) {
            front = 0;  // First element
        }
        rear = (rear + 1) % MAX;
        queue[rear] = elem;
        printf("Inserted %c into the queue\n", elem);
    }
}

void delete() {
    if (front == -1) {
        printf("Queue Underflow\n");
    } else {
        printf("Deleted %c from the queue\n", queue[front]);
        if (front == rear) {
            front = rear = -1;  // Queue is empty after deletion
        } else {
            front = (front + 1) % MAX;
        }
    }
}

void display() {
    if (front == -1) {
        printf("Queue is empty\n");
    } else {
        int i = front;
        printf("Queue elements: ");
        while (i != rear) {
            printf("%c ", queue[i]);
            i = (i + 1) % MAX;
        }
        printf("%c\n", queue[rear]);
    }
}

int main() {
    char choice, element;

    while (1) {
        printf("\nMenu:\n");
        printf("1. Insert an Element into Circular Queue\n");
        printf("2. Delete an Element from Circular Queue\n");
        printf("3. Display Circular Queue Status\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf(" %c", &choice);  // Space before %c to ignore any leftover newline

        switch (choice) {
            case '1':
                printf("Enter a character to insert: ");
                scanf(" %c", &element);
                insert(element);
                break;
            case '2':
                delete();
                break;
            case '3':
                display();
                break;
            case '4':
                exit(0);
            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
