#include <stdio.h>
#include <string.h>
#define MAX 5

int stack[MAX];
int top = -1;

int isEmpty() {
    return top == -1;
}

int isFull() {
    return top == MAX - 1;
}

void push(int element) {
    if (isFull()) {
        printf("Stack Overflow\n");
    } else {
        stack[++top] = element;
        printf("%d pushed to stack\n", element);
    }
}

int pop() {
    if (isEmpty()) {
        printf("Stack Underflow\n");
        return -1;
    } else {
        return stack[top--];
    }
}

int isPalindrome(char* str) {
    int length = strlen(str);
    int i;

    for (i = 0; i < length; i++) {
        push(str[i]);
    }

    for (i = 0; i < length; i++) {
        if (str[i] != pop()) {
            return 0;
        }
    }
    return 1;
}

void displayStack() {
    if (isEmpty()) {
        printf("Stack is empty\n");
    } else {
        printf("Stack elements: ");
        for (int i = 0; i <= top; i++) {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}

int main() {
    int choice, element;
    char str[100];

    do {
        printf("\nMenu:\n");
        printf("1. Push an Element onto Stack\n");
        printf("2. Pop an Element from Stack\n");
        printf("3. Check Palindrome\n");
        printf("4. Demonstrate Overflow and Underflow\n");
        printf("5. Display Stack Status\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter an integer to push: ");
                scanf("%d", &element);
                push(element);
                break;
            case 2:
                element = pop();
                if (element != -1) {
                    printf("%d popped from stack\n", element);
                }
                break;
            case 3:
                printf("Enter a string to check palindrome: ");
                scanf("%s", str);
                if (isPalindrome(str)) {
                    printf("The string is a palindrome\n");
                } else {
                    printf("The string is not a palindrome\n");
                }
                break;
            case 4:
                printf("Demonstrating Overflow and Underflow:\n");
                for (int i = 0; i < MAX + 1; i++) {
                    push(i);
                }
                for (int i = 0; i < MAX + 1; i++) {
                    pop();
                }
                break;
            case 5:
                displayStack();
                break;
            case 6:
                printf("Exiting program\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 6);

    return 0;
}
